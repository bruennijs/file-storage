version: '2'
services:
  mono-app:
    build:
      context: .
      dockerfile: Dockerfile-dnx-app
    container_name: file-storage.mono-app
    #image: microsoft/aspnet:1.0.0-rc1-update1  
    ports:
     - "8082:5000"
    expose:
      - "5000"

  dnx-mono-shell:
    container_name: dnx-mono-shell
    image: microsoft/aspnet:1.0.0-rc1-update1
    #image: filestorage_app:latest
    volumes:
     - .:/app
    read_only: false
    stdin_open: true
    tty: true    
    entrypoint: /bin/bash
  dnx-mono-shell-ro:
    container_name: dnx-mono-shell
    image: microsoft/aspnet:1.0.0-rc1-update1
    #image: filestorage_app:latest
    volumes:
     - .:/app
    read_only: false
    stdin_open: true
    tty: true    
    entrypoint: /bin/bash    
    
  dnx-coreclr-shell:
    container_name: dnx-coreclr-shell
    image: microsoft/aspnet:1.0.0-rc1-update1-coreclr
    #image: microsoft/dotnet:latest
    volumes:
     - .:/app   
    #command: /bin/bash
    read_only: false
    stdin_open: true
    tty: true    
    entrypoint: /bin/bash 

  microsoft-dotnet:
    container_name: microsoft-dotnet
    #image: microsoft/aspnet:1.0.0-rc1-update1-coreclr
    image: microsoft/dotnet:latest
    volumes:
     - .:/app
    read_only: false
    stdin_open: true
    tty: true     
    entrypoint: /bin/bash

  dotnet-app:
    build:
      context: .
      dockerfile: Dockerfile-dotnet-app
    container_name: file-storage.dotnet-app
    #image: microsoft/aspnet:1.0.0-rc1-update1
    #image: microsoft/dotnet:latest
    volumes:
     - .:/app 

  # Afterwards start container and attach
  # docker start -a -i dotnet-shell
  dotnet-shell:
    build:
      context: .
      dockerfile: Dockerfile-dotnet  
    container_name: dotnet-shell
    #depends_on:
    #  - dotnet-build
    volumes:
     - .:/app
    read_only: false
    stdin_open: true
    tty: true
    entrypoint: /bin/bash
